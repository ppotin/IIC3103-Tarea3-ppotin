{"version":3,"sources":["App.js","serviceWorker.js","index.js","logo.svg"],"names":["App","props","componentDidMount","activarSocket","state","status","getStocksInfo","getExchangesInfo","socketInfo","io","path","emit","on","data","forEach","stock","createStock","ticker","company_name","country","quote_base","Object","entries","exchange","createExchange","name","exchange_ticker","address","listed_companies","quote","options","stats","lastValue","sellBuy","dic","stocks","aux","set","setState","companies","buy","sell","total","numStocks","share","includes","push","exchanges","s","socket","close","checked","contador","socketAux","has","get","time","Date","value","max","min","delta","Number","toFixed","length","splice","volume","refreshSelected","news","selected","handleChange","values","selecionados","handleChange2","selected2","Map","bind","myloop","myloop2","options2","createData2","exchangeStocks","this","key","label","last","rows","style","backgroundColor","color","align","applePor","chartTextStyle","classes","makeStyles","table","minWidth","className","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","TableBody","map","row","width","height","chartType","loader","hAxis","title","format","textStyle","titleTextStyle","vAxis","gridlines","legend","colors","fill","rootProps","dataExchanges","rows2","customStyles","input","provided","borderBottom","padding","option","isSelected","isFocused","hover","menu","indicatorSeparatorStyle","alignSelf","marginBottom","marginTop","IndicatorSeparator","innerProps","FormControlLabel","control","Switch","onChange","inputProps","isClearable","placeholder","components","isMulti","styles","is3D","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.5469d7f2.chunk.js","sourcesContent":["import React from 'react'\nimport logo from './logo.svg'\nimport './App.css'\nimport io from 'socket.io-client'\nimport { render } from 'react-dom'\nimport Chart from 'react-google-charts'\nimport Switch from '@material-ui/core/Switch'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\nimport Select, { components } from 'react-select'\n\n// const socket = io('https://le-18262636.bitzonte.com/', {\n//   path: '/stocks'\n// })\n\nexport default class App extends React.Component {\n  // eslint-disable-next-line no-useless-constructor\n  constructor (props) {\n    super(props)\n    this.state = {\n      status: 'OFF',\n      checked: true,\n      contador: 0,\n      stocks: new Map(),\n      exchanges: new Map(),\n      selected: [],\n      selected2: []\n    }\n    this.activarSocket = this.activarSocket.bind(this)\n    this.createStock = this.createStock.bind(this)\n    this.getStocksInfo = this.getStocksInfo.bind(this)\n    this.getExchangesInfo = this.getExchangesInfo.bind(this)\n    this.createExchange = this.createExchange.bind(this)\n    this.createStock = this.createStock.bind(this)\n  };\n\n  componentDidMount = () => {\n    this.activarSocket(this.state.status)\n    this.getStocksInfo()\n    this.getExchangesInfo()\n  }\n\n  getStocksInfo = () => {\n    var socketInfo = io('wss://le-18262636.bitzonte.com/', {\n      path: '/stocks'\n    })\n    socketInfo.emit('STOCKS' /* */)\n    socketInfo.on('STOCKS', (data) => {\n      // console.log(data)\n      data.forEach((stock) => {\n        this.createStock(stock.ticker, stock.company_name, stock.country, stock.quote_base)\n      })\n    })\n  }\n\n  getExchangesInfo = () => {\n    var socketInfo = io('wss://le-18262636.bitzonte.com/', {\n      path: '/stocks'\n    })\n    socketInfo.emit('EXCHANGES' /* */)\n    socketInfo.on('EXCHANGES', (data) => {\n      // console.log(Object.entries(data))\n      Object.entries(data).forEach((exchange) => {\n        this.createExchange(exchange[1].name, exchange[1].exchange_ticker, exchange[1].country, exchange[1].address, exchange[1].listed_companies)\n      })\n    })\n  }\n\n  createStock = (ticker, name, country, quote) => {\n    var options = this.state.options\n    var stock = {\n      ticker: ticker,\n      name: name,\n      country: country,\n      quote: quote,\n      data: [['x', ticker]],\n      stats: [0, 10000, 0],\n      lastValue: 0,\n      sellBuy: [0, 0]\n    }\n\n    var dic = this.state.stocks\n    var aux = dic.set(ticker, stock)\n    this.setState({ stocks: dic, options: options })\n    return aux\n  }\n\n  createExchange = (name, ticker, country, address, companies) => {\n    var exchange = {\n      ticker: ticker,\n      name: name,\n      country: country,\n      address: address,\n      companies: companies,\n      stocks: [],\n      buy: 0,\n      sell: 0,\n      total: 0,\n      numStocks: 0,\n      share: 0\n    }\n\n    this.state.stocks.forEach((stock) => {\n      if (exchange.companies.includes(stock.name)) {\n        exchange.stocks.push(stock.ticker)\n      }\n    })\n\n    // console.log(exchange)\n\n    var dic = this.state.exchanges\n    var aux = dic.set(ticker, exchange)\n    this.setState({ exchanges: dic })\n    return aux\n  }\n\n  activarSocket = (s) => {\n    if (s === 'ON') {\n      // console.log('Apagamos el socket')\n      this.state.socket.close()\n      this.setState({ status: 'OFF', checked: false, contador: 0 })\n    } else {\n      // this.setState({ stocks: new Map() })\n      // this.getStocksInfo()\n      // this.getExchangesInfo()\n      // console.log('Prendimos el socket')\n      var socketAux = io('wss://le-18262636.bitzonte.com/', {\n        path: '/stocks'\n      })\n      socketAux.on('UPDATE', (data) => {\n        // console.log(\"Update:\\t\", data);\n\n        // if (data.ticker === \"FB\") {\n        //   console.log(this.state.stocks.get(\"FB\"));\n\n        // }\n\n        var stocks = this.state.stocks\n\n        if (!stocks.has(data.ticker)) {\n          this.createStock(data.ticker)\n        } else {\n        }\n\n        var stock = this.state.stocks.get(data.ticker)\n\n        var time = new Date(data.time)\n        var value = data.value\n\n        var max = stock.stats[0]\n        var min = stock.stats[1]\n        var delta = Number((((value - stock.lastValue) / stock.lastValue) * 100).toFixed(3))\n\n        if (value > max) {\n          max = value\n        }\n        if (value < min) {\n          min = value\n        }\n        if (stock.data.length > 100) {\n          stock.data.splice(1, 1)\n        }\n\n        stock.lastValue = value\n        stock.data.push([time, value])\n        stock.stats[0] = max\n        stock.stats[1] = min\n        stock.stats[2] = delta\n\n        var contador = this.state.contador\n        contador += 1\n        this.setState({ contador: contador })\n        // this.createDataExchange()\n      })\n      socketAux.on('BUY', (data) => {\n        var stock = this.state.stocks.get(data.ticker)\n\n        if (stock) {\n          stock.sellBuy[0] = data.volume\n        }\n      })\n      socketAux.on('SELL', (data) => {\n        var stock = this.state.stocks.get(data.ticker)\n\n        if (stock) {\n          stock.sellBuy[1] = data.volume\n        }\n      })\n      this.setState({ status: 'ON', socket: socketAux, checked: true })\n    };\n  }\n\n  refreshSelected = () => {\n    var news = []\n    this.state.selected.forEach((stock) => {\n      news.push(this.state.stocks.get(stock.ticker))\n    })\n    // console.log(news)\n    this.setState({ selected: news })\n  }\n\n  handleChange = (values) => {\n    var selecionados = []\n    if (values) {\n      values.forEach((stock) => {\n        selecionados.push(stock.value)\n      })\n    }\n    this.setState({ selected: selecionados })\n  }\n\n  handleChange2 = (values) => {\n    var selecionados = []\n    if (values) {\n      values.forEach((exchange) => {\n        selecionados.push(exchange.value)\n      })\n    }\n    this.setState({ selected2: selecionados })\n  }\n\n  render () {\n    // if (this.state.exchanges.get('NASDAQ')) {\n    //   console.log(this.state.exchanges.get('NASDAQ').stocks[0])\n    // }\n    function createData (total, max, min, last, delta) {\n      return { total, max, min, last, delta }\n    }\n\n    var myloop = []\n    var myloop2 = []\n    var options = []\n    var options2 = []\n\n    this.state.stocks.forEach(function (value, key) {\n      options.push({ label: value.name, value: value })\n    })\n\n    this.state.selected.forEach(function (value) {\n      const rows = [\n        createData(value.sellBuy[0] + value.sellBuy[1],\n          value.stats[0], value.stats[1],\n          value.lastValue, value.stats[2])\n      ]\n      const style = { backgroundColor: '#282c34', color: 'white', align: 'center' }\n      var applePor = { backgroundColor: '#282c34', color: 'white', align: 'center' }\n      if (value.stats[2] > 0) {\n        applePor = { backgroundColor: '#282c34', color: 'green', align: 'center' }\n      } else {\n        applePor = { backgroundColor: '#282c34', color: 'red', align: 'center' }\n      }\n      var chartTextStyle = { color: '#FFF' }\n      const classes = makeStyles({\n        table: {\n          minWidth: 650\n        }\n      })\n\n      myloop.push(\n        <div className='Stock-Container'>\n          <div className='Data-Container'>\n            <h2>{value.name}<br></br>{value.ticker} - {value.country}</h2>\n            <TableContainer component={Paper}>\n              <Table className={classes.table} style={style} aria-label=\"simple table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell style={style} align=\"center\">Volumen&nbsp;Total&nbsp;transado</TableCell>\n                    <TableCell style={style} align=\"center\">Alto&nbsp;historico</TableCell>\n                    <TableCell style={style} align=\"center\">Bajo&nbsp;historico</TableCell>\n                    <TableCell style={style} align=\"center\">Ultimo&nbsp;Precio</TableCell>\n                    <TableCell style={style} align=\"center\">Variacion&nbsp;Porcentual</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {rows.map((row) => (\n                    <TableRow key={row.name}>\n                      <TableCell style={style} align=\"center\">{row.total}</TableCell>\n                      <TableCell style={style} align=\"center\">{row.max}</TableCell>\n                      <TableCell style={style} align=\"center\">{row.min}</TableCell>\n                      <TableCell style={style} align=\"center\">{row.last}</TableCell>\n                      <TableCell style={applePor} align=\"center\">{row.delta}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </div>\n          <Chart\n            width={'600px'}\n            height={'400px'}\n            chartType=\"LineChart\"\n            loader={<div>Loading Chart</div>}\n            data={value.data}\n            options={{\n              hAxis: {\n                title: 'Hora',\n                format: 'HH:mm:ss',\n                textStyle: chartTextStyle,\n              \ttitleTextStyle: chartTextStyle\n              },\n              vAxis: {\n                title: 'Precio' + ' (' + value.quote + ')',\n                textStyle: chartTextStyle,\n\t              titleTextStyle: chartTextStyle,\n                gridlines: { color: '#787878' }\n              },\n              legend: {\n                textStyle: chartTextStyle\n              },\n              colors: ['white'],\n              backgroundColor: { fill: 'transparent' }\n            }}\n            rootProps={{ 'data-testid': '1' }}\n          />\n        </div>\n      )\n    })\n\n    function createData2 (stocks, exchangeStocks) {\n      var buy = 0\n      var sell = 0\n      var total = 0\n      var numStocks = 0\n      var share = 0\n      // console.log(stocks)\n      exchangeStocks.forEach((ticker) => {\n        var stock = stocks.get(ticker)\n        if (stock) {\n          buy += stock.stats[0]\n          sell += stock.stats[1]\n          numStocks += 1\n        }\n      })\n      total = Number((sell + buy).toFixed(3))\n      buy = Number((buy).toFixed(3))\n      sell = Number((sell).toFixed(3))\n      // console.log({ buy, sell, total, numStocks, share })\n      return { buy, sell, total, numStocks, share }\n    }\n\n    var dataExchanges = [['Exchange', 'participación']]\n\n    this.state.exchanges.forEach(function (value, key) {\n      options2.push({ label: value.name, value: value })\n    })\n\n    var stocks = this.state.stocks\n\n    this.state.selected2.forEach(function (exchange) {\n      const rows2 = [\n        createData2(stocks, exchange.stocks)\n      ]\n\n      dataExchanges.push([exchange.name, rows2[0].total])\n      const style = { backgroundColor: '#282c34', color: 'white', align: 'center' }\n\n      var chartTextStyle = { color: '#FFF' }\n      const classes = makeStyles({\n        table: {\n          minWidth: 650\n        }\n      })\n\n      myloop2.push(\n        <div className='Stock-Container'>\n          <div className='Data-Container'>\n            <h2>{exchange.name}<br></br>{exchange.ticker} - {exchange.country}<br></br>{exchange.address}</h2>\n            <TableContainer component={Paper}>\n              <Table className={classes.table} style={style} aria-label=\"simple table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell style={style} align=\"center\">Volumen&nbsp;Compra</TableCell>\n                    <TableCell style={style} align=\"center\">Volumen&nbsp;Venta</TableCell>\n                    <TableCell style={style} align=\"center\">Volumen&nbsp;Total</TableCell>\n                    <TableCell style={style} align=\"center\">Cantidad&nbsp;Acciones</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {rows2.map((row) => (\n                    <TableRow key={row.name}>\n                      <TableCell style={style} align=\"center\">{row.buy}</TableCell>\n                      <TableCell style={style} align=\"center\">{row.sell}</TableCell>\n                      <TableCell style={style} align=\"center\">{row.total}</TableCell>\n                      <TableCell style={style} align=\"center\">{row.numStocks}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </div>\n        </div>\n      )\n    })\n\n    const customStyles = {\n      input: (provided, state) => ({\n        borderBottom: '1px dotted pink',\n        padding: 20,\n        width: '300px',\n        align: 'left',\n        height: '10px'\n      }),\n      option: (provided, state) => ({\n        borderBottom: '1px dotted pink',\n        color: state.isSelected ? 'green' : 'black',\n        backgroundColor: state.isFocused ? 'gray' : 'white',\n        padding: 20,\n        hover: 'gray'\n      }),\n      menu: (provided, state) => ({\n        ...provided,\n        width: '500px',\n        borderBottom: '1px dotted pink',\n        color: 'black',\n        padding: 0\n      })\n    }\n\n    // const controlStyles = {\n    //   borderRadius: '1px solid black',\n    //   padding: '5px',\n    //   background: '#282c34',\n    //   color: 'white'\n    // }\n\n    // const ControlComponent = props => (\n    //   <div style={controlStyles}>\n    //     {<p>Selecciona una empresa</p>}\n    //     <components.Control {...props} />\n    //   </div>\n    // )\n\n    const indicatorSeparatorStyle = {\n      alignSelf: 'stretch',\n      backgroundColor: '#282c34',\n      marginBottom: 8,\n      marginTop: 8,\n      width: 1\n    }\n\n    const IndicatorSeparator = ({ innerProps }) => {\n      return <span style={indicatorSeparatorStyle} {...innerProps} />\n    }\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>\n            Ultimate Financial Dashboard\n          </p>\n          <FormControlLabel\n            control={\n              <Switch\n                onChange={() => { this.activarSocket(this.state.status) }}\n                checked={this.state.checked}\n                name=\"checkedA\"\n                inputProps={{ 'aria-label': 'secondary checkbox' }}\n              />\n            }\n            label=\"ON/OFF\"\n          />\n        </header>\n        <body className='App-body'>\n          <h1 align='left'>Stocks</h1>\n          <hr color='white' width='1400'></hr>\n          <div align='left'>\n            <Select\n              isClearable\n              placeholder=\"Selecciona empresa...\"\n              components={{ IndicatorSeparator }}\n              isMulti\n              name=\"name\"\n              options={options}\n              onChange={(values) => { this.handleChange(values) }}\n              styles={customStyles}\n            />\n          </div>\n          {myloop}\n          <h1 align='left'>Exchanges</h1>\n          <hr color='white' width='1400'></hr>\n          <div align='left'>\n            <Select\n              isClearable\n              placeholder=\"Selecciona Mercado...\"\n              components={{ IndicatorSeparator }}\n              isMulti\n              name=\"name\"\n              options={options2}\n              onChange={(values) => { this.handleChange2(values) }}\n              styles={customStyles}\n            />\n          </div>\n          {myloop2}\n          <Chart\n            width={'600px'}\n            height={'400px'}\n            chartType=\"PieChart\"\n            loader={<div>Loading Chart</div>}\n            data={dataExchanges}\n            options={{\n              title: 'Participación de mercado',\n              titleTextStyle: {\n                color: 'white',\n                align: 'center'\n              },\n              legend: {\n                textStyle: { color: 'white' }\n              },\n              is3D: true,\n              backgroundColor: { fill: 'transparent' }\n            }}\n            rootProps={{ 'data-testid': '1' }}\n          />\n        </body>\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}